$date
	Fri Sep 23 02:28:14 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module behavioralMultiplexer $end
$var wire 2 ! address [1:0] $end
$var wire 1 " address0 $end
$var wire 1 # address1 $end
$var wire 1 $ in0 $end
$var wire 1 % in1 $end
$var wire 1 & in2 $end
$var wire 1 ' in3 $end
$var wire 4 ( inputs [3:0] $end
$var wire 1 ) out $end
$upscope $end
$scope module testMultiplexer $end
$var wire 1 * out $end
$var reg 1 + addr0 $end
$var reg 1 , addr1 $end
$var reg 1 - in0 $end
$var reg 1 . in1 $end
$var reg 1 / in2 $end
$var reg 1 0 in3 $end
$scope module multiplexer $end
$var wire 1 1 address0 $end
$var wire 1 2 address1 $end
$var wire 1 3 in0 $end
$var wire 1 4 in1 $end
$var wire 1 5 in2 $end
$var wire 1 6 in3 $end
$var wire 1 7 naddress0 $end
$var wire 1 8 naddress1 $end
$var wire 1 9 o0 $end
$var wire 1 : o1 $end
$var wire 1 ; o2 $end
$var wire 1 < o3 $end
$var wire 1 * out $end
$var wire 1 = out0 $end
$var wire 1 > out1 $end
$var wire 1 ? out2 $end
$var wire 1 @ out3 $end
$upscope $end
$upscope $end
$enddefinitions $end
#8000000
$dumpvars
0@
0?
0>
1=
0<
0;
0:
19
08
07
16
x5
x4
x3
12
11
10
x/
x.
x-
1,
1+
1*
x)
bz (
z'
z&
z%
z$
z#
z"
bz !
$end
