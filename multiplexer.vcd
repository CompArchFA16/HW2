$date
	Thu Sep 22 23:07:42 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module behavioralMultiplexer $end
$var wire 2 ! address [1:0] $end
$var wire 1 " address0 $end
$var wire 1 # address1 $end
$var wire 1 $ in0 $end
$var wire 1 % in1 $end
$var wire 1 & in2 $end
$var wire 1 ' in3 $end
$var wire 4 ( inputs [3:0] $end
$var wire 1 ) out $end
$upscope $end
$scope module testMultiplexer $end
$var wire 1 * out $end
$var reg 1 + addr0 $end
$var reg 1 , addr1 $end
$var reg 1 - in0 $end
$var reg 1 . in1 $end
$var reg 1 / in2 $end
$var reg 1 0 in3 $end
$scope module multiplexer $end
$var wire 1 1 address0 $end
$var wire 1 2 address1 $end
$var wire 1 3 in0 $end
$var wire 1 4 in1 $end
$var wire 1 5 in2 $end
$var wire 1 6 in3 $end
$var wire 1 7 naddress0 $end
$var wire 1 8 naddress1 $end
$var wire 1 9 o0 $end
$var wire 1 : o1 $end
$var wire 1 ; o2 $end
$var wire 1 < o3 $end
$var wire 1 * out $end
$var wire 1 = out0 $end
$var wire 1 > out1 $end
$var wire 1 ? out2 $end
$var wire 1 @ out3 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0@
0?
0>
0=
1<
0;
0:
09
18
17
x6
x5
x4
03
02
01
x0
x/
x.
0-
0,
0+
0*
x)
bz (
z'
z&
z%
z$
z#
z"
bz !
$end
#1000
1*
1@
1-
13
#2000
0*
0<
0@
07
1;
x-
x3
0.
04
1+
11
#3000
1*
1?
1.
14
#4000
0*
0?
08
1:
17
0;
x.
x4
0/
05
1,
12
0+
01
#5000
1*
1>
1/
15
#6000
0*
0:
0>
07
19
x/
x5
00
06
1+
11
#7000
1*
1=
10
16
#8000
