$date
	Mon Sep 19 19:05:05 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module behavioralMultiplexer $end
$var wire 2 ! address [1:0] $end
$var wire 1 " address0 $end
$var wire 1 # address1 $end
$var wire 1 $ in0 $end
$var wire 1 % in1 $end
$var wire 1 & in2 $end
$var wire 1 ' in3 $end
$var wire 4 ( inputs [3:0] $end
$var wire 1 ) out $end
$upscope $end
$scope module testMultiplexer $end
$var wire 1 * out $end
$var reg 1 + address0 $end
$var reg 1 , address1 $end
$var reg 1 - in0 $end
$var reg 1 . in1 $end
$var reg 1 / in2 $end
$var reg 1 0 in3 $end
$scope module multiplexer $end
$var wire 1 1 address0 $end
$var wire 1 2 address1 $end
$var wire 1 3 d0 $end
$var wire 1 4 d1 $end
$var wire 1 5 d2 $end
$var wire 1 6 d3 $end
$var wire 1 7 in0 $end
$var wire 1 8 in1 $end
$var wire 1 9 in2 $end
$var wire 1 : in3 $end
$var wire 1 ; nadd0 $end
$var wire 1 < nadd1 $end
$var wire 1 * out $end
$var wire 1 = s0 $end
$var wire 1 > s1 $end
$var wire 1 ? s2 $end
$var wire 1 @ s3 $end
$var wire 1 A t0 $end
$var wire 1 B t1 $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
xB
xA
x@
x?
x>
x=
x<
x;
x:
x9
x8
x7
x6
x5
x4
x3
x2
x1
x0
x/
x.
x-
x,
x+
x*
x)
bz (
z'
z&
z%
z$
z#
z"
bz !
$end
#200000
0*
0B
0A
13
0@
0?
0>
0=
1<
05
1;
04
06
00
0:
0/
09
0.
08
0-
07
0,
02
0+
01
#1200000
10
1:
1/
19
1.
18
#2200000
1*
1A
1=
00
0:
0/
09
0.
08
1-
17
#3200000
0*
0A
03
0=
0;
14
0-
07
1+
11
#4200000
1*
1A
1>
1.
18
#5200000
0*
0A
0>
0<
15
1;
04
0.
08
1,
12
0+
01
#6200000
1*
1B
1?
1/
19
#7200000
0*
0B
05
0?
0;
16
0/
09
1+
11
#8200000
1*
1B
1@
10
1:
#9200000
