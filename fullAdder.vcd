$date
	Fri Sep 23 02:10:10 2016
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module behavioralFullAdder $end
$var wire 1 ! a $end
$var wire 1 " b $end
$var wire 1 # carryin $end
$var wire 1 $ carryout $end
$var wire 1 % sum $end
$upscope $end
$scope module testFullAdder $end
$var wire 1 & carryout $end
$var wire 1 ' sum $end
$var reg 1 ( a $end
$var reg 1 ) b $end
$var reg 1 * carryin $end
$scope module adder $end
$var wire 1 + a $end
$var wire 1 , abCinXor $end
$var wire 1 - abSum $end
$var wire 1 . abXor $end
$var wire 1 / b $end
$var wire 1 0 carryin $end
$var wire 1 & carryout $end
$var wire 1 ' sum $end
$upscope $end
$upscope $end
$enddefinitions $end
#8000
$dumpvars
10
1/
0.
1-
0,
1+
1*
1)
1(
1'
1&
x%
x$
z#
z"
z!
$end
